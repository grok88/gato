{"version":3,"sources":["features/Error404/Error404.module.css","components/Checkbox/Checkbox.module.css","components/InputText/InputText.module.css","components/Button/Button.module.css","components/EditableSpan/EditableSpan.module.css","features/Header/Header.module.css","components/Range/Range.module.css","features/TestComponents/TestComponents.module.css","features/Error404/Error404.tsx","features/Login/Login.tsx","features/password/ForgotPassword/ForgotPassword.tsx","features/password/NewPassword/NewPassword.tsx","features/Profile/Profile.tsx","features/Registration/Registration.tsx","components/Button/Button.tsx","components/Checkbox/Checkbox.tsx","components/InputText/InputText.tsx","assets/pencil.svg","components/EditableSpan/EditableSpan.tsx","components/Radio/Radio.tsx","components/Range/Range.tsx","components/Select/Select.tsx","features/TestComponents/TestComponents.tsx","components/Routes/Routes.tsx","features/Header/Header.tsx","app/App.tsx","app/reducers/app-reducer.ts","app/reducers/auth-reducer.ts","app/reducers/profile-reducer.ts","app/reducers/test-reducer.ts","app/store.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","Error404","className","s","mainbox","err","far","err2","msg","link","to","Login","ForgotPassword","NewPassword","Profile","Registration","Button","red","onClick","restProps","finalClassName","superButton","Checkbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","container","e","currentTarget","checked","checkmark","InputText","onChangeText","onKeyPress","onEnter","error","placeholder","finalSpanClassName","superInput","errorInput","value","key","EditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","innerValue","setInnerValue","onDoubleClick","restSpanProps","superEditableSpan","editableSpanPencil","src","pencil","Radio","name","options","onChangeOption","onChangeCallback","mappedOptions","map","o","i","Range","onChangeRange","finalRangeClassName","range","Select","opt","TestComponents","textForInputText","setTextForInputText","testArrForSelect","option","setRange","styles","test","alert","length","PATH","Routes","path","render","Header","header","nav","navList","navItem","navLink","App","initialState","rootReducer","combineReducers","app","state","auth","profile","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35090a74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbox\":\"Error404_mainbox__3_hjm\",\"err\":\"Error404_err__nl0Hk\",\"far\":\"Error404_far__2xdFj\",\"err2\":\"Error404_err2__3NOjv\",\"msg\":\"Error404_msg__3s_Yj\",\"link\":\"Error404_link__gdaij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Checkbox_container__yHLzj\",\"checkmark\":\"Checkbox_checkmark__2dVQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"InputText_superInput__2zI6a\",\"errorInput\":\"InputText_errorInput__jHuox\",\"error\":\"InputText_error__1LZol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superButton\":\"Button_superButton__87V3D\",\"red\":\"Button_red__3V6D6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superEditableSpan\":\"EditableSpan_superEditableSpan__2bXi5\",\"editableSpanPencil\":\"EditableSpan_editableSpanPencil__1aIdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__27imv\",\"navList\":\"Header_navList__2h-b1\",\"navItem\":\"Header_navItem__3i8TQ\",\"navLink\":\"Header_navLink__3Uaok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"Range_range__PzUWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"TestComponents_test__33as_\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Error404.module.css';\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.mainbox}>\r\n            <div className={s.err}>4</div>\r\n            <i className={`${s.far} far fa-question-circle fa-spin`}></i>\r\n            <div className={s.err2}>4</div>\r\n            <div className={s.msg}>Maybe this page moved? Got deleted? Is hiding out in quarantine?\r\n            Never existed in the first place?\r\n                <p>Let's go <NavLink className={s.link} to=\"/\">home</NavLink> and try from there.</p></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","export const Login = () => {\r\n  return <div>Login</div>\r\n}","export const ForgotPassword = () => {\r\n  return <div>Forgot Password</div>\r\n}","export const NewPassword = () => {\r\n  return <div>New Password</div>\r\n}","export const Profile = () => {\r\n  return <div>Profile</div>\r\n}","export const Registration = () => {\r\n  return <div>Registration</div>\r\n}","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\r\nimport s from \"./Button.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst Button: React.FC<ButtonPropsType> = (\r\n    {\r\n        red, className, onClick,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.superButton} ${red ? s.red : \"\"} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\r\nimport s from \"./Checkbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst Checkbox: React.FC<CheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.container}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            <span className={s.checkmark}></span>\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default Checkbox;\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\";\r\nimport s from \"./InputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype InputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst InputText: React.FC<InputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        placeholder,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n            && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n            && onEnter // и есть пропс onEnter\r\n            && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : \"\"}`; // need to fix with (?:) and s.superInput - FIXED\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                placeholder={placeholder}\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputText;\r\n","export default __webpack_public_path__ + \"static/media/pencil.a0208dcd.svg\";","import React, { DetailedHTMLProps, HTMLAttributes, InputHTMLAttributes, useState } from \"react\";\r\nimport InputText from \"../InputText/InputText\";\r\nimport pencil from './../../assets/pencil.svg';\r\nimport s from './EditableSpan.module.css';\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype EditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst EditableSpan: React.FC<EditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n        value,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const [innerValue, setInnerValue] = useState(value);\r\n    const { children, onDoubleClick, className, ...restSpanProps } = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false); // выключить editMode при нажатии Enter\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n    const onChangeValueCallback = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInnerValue(e.currentTarget.value);\r\n    }\r\n\r\n    const spanClassName = `${s.superEditableSpan} ${className || \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <InputText\r\n                        value={innerValue}\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        onChange={onChangeValueCallback}\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        <img className={s.editableSpanPencil} src={pencil} />\r\n                        {children || innerValue}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EditableSpan;\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype RadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst Radio: React.FC<RadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeOption && onChangeOption(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            <input\r\n                type={\"radio\"}\r\n                name={name}\r\n                checked={o === value}\r\n                value={o}\r\n                onChange={onChangeCallback}\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Radio;\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from \"react\";\r\nimport s from \"./Range.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype RangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeRange?: (value: number) => void\r\n};\r\n\r\nconst Range: React.FC<RangePropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeRange,\r\n        className,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e); // сохраняем старую функциональность\r\n\r\n        onChangeRange && onChangeRange(+e.currentTarget.value);\r\n    }\r\n\r\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"range\"}\r\n                onChange={onChangeCallback}\r\n                className={finalRangeClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Range;\r\n","import React, { ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes } from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SelectPropsType = DefaultSelectPropsType & {\r\n    options?: string[]\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst Select: React.FC<SelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    // нормально ли так проверять, передали ли options\r\n    const mappedOptions: JSX.Element[] = options?.map((opt, i) => <option key={i}>{opt}</option>) || [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        // onChange мы должы передавать в пропсах?\r\n        onChange && onChange(e);\r\n        onChangeOption && onChangeOption(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default Select;\r\n","import React, { useState } from \"react\"\r\nimport Button from \"../../components/Button/Button\"\r\nimport Checkbox from \"../../components/Checkbox/Checkbox\"\r\nimport EditableSpan from \"../../components/EditableSpan/EditableSpan\"\r\nimport InputText from \"../../components/InputText/InputText\"\r\nimport Radio from \"../../components/Radio/Radio\"\r\nimport Range from \"../../components/Range/Range\"\r\nimport Select from \"../../components/Select/Select\"\r\nimport styles from \"./TestComponents.module.css\"\r\n\r\nexport const TestComponents = () => {\r\n\r\n  const [textForInputText, setTextForInputText] = useState(\"\");\r\n  const testArrForSelect = [\"Cat\", \"Dog\", \"Parrot\"];\r\n  const [option, onChangeOption] = useState(testArrForSelect[1]);\r\n  let editableSpanValue = \"Editable span\";\r\n  const [range, setRange] = useState(0);\r\n\r\n  return (\r\n    <div className={styles.test}>\r\n      <div>\r\n        <Button onClick={() => alert(\"Demo button clicked\")}>Demo</Button>\r\n      </div>\r\n      <div>\r\n        <Checkbox>My checkbox</Checkbox>\r\n      </div>\r\n      <div>\r\n        <EditableSpan value={editableSpanValue} />\r\n      </div>\r\n      <div>\r\n        <InputText\r\n          onChange={(e) => setTextForInputText(e.currentTarget.value)}\r\n          placeholder=\"Type smth to get rid of error\"\r\n          error={textForInputText.length ? \"\" : \"error\"} />\r\n      </div>\r\n      <div>\r\n        <Radio\r\n          onChangeOption={onChangeOption}\r\n          value={option}\r\n          options={testArrForSelect} />\r\n      </div>\r\n      <div>\r\n        <span>{range}</span>\r\n        <Range\r\n          value={range}\r\n          onChangeRange={(e: number) => setRange(e)} />\r\n      </div>\r\n      <div>\r\n        <Select\r\n          onChangeOption={onChangeOption}\r\n          value={option}\r\n          options={testArrForSelect} />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Error404 from '../../features/Error404/Error404';\r\nimport { Login } from \"../../features/Login/Login\";\r\nimport { ForgotPassword } from \"../../features/password/ForgotPassword/ForgotPassword\";\r\nimport { NewPassword } from \"../../features/password/NewPassword/NewPassword\";\r\nimport { Profile } from \"../../features/Profile/Profile\";\r\nimport { Registration } from \"../../features/Registration/Registration\";\r\nimport { TestComponents } from \"../../features/TestComponents/TestComponents\";\r\n\r\nexport const PATH = {\r\n  PROFILE: \"/profile\",\r\n  REGISTRATION: \"/registration\",\r\n  LOGIN: \"/login\",\r\n  NEWPASSWORD: \"/new-password\",\r\n  FORGOTPASSWORD: \"/forgot-password\",\r\n  TESTCOMPONENTS: \"/test-components\"\r\n}\r\n\r\nfunction Routes() {\r\n  return (\r\n    <div>\r\n      {/*Switch выбирает первый подходящий роут*/}\r\n      <Switch>\r\n\r\n        {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n        {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n        {/* <Route path={\"/\"} exact render={() => <Redirect to={PATH.LOGIN} />} /> */}\r\n        <Route path={PATH.LOGIN} render={() => <Login />} />\r\n        <Route path={PATH.REGISTRATION} render={() => <Registration />} />\r\n        <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n        <Route path={PATH.NEWPASSWORD} render={() => <NewPassword />} />\r\n        <Route path={PATH.FORGOTPASSWORD} render={() => <ForgotPassword />} />\r\n        <Route path={PATH.TESTCOMPONENTS} render={() => <TestComponents />} />\r\n\r\n        {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n        <Route render={() => <Error404 />} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import { NavLink } from \"react-router-dom\"\r\nimport styles from './Header.module.css'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <nav className={styles.nav}>\r\n        <ul className={styles.navList}>\r\n          <li className={styles.navItem}>\r\n            <NavLink className={styles.navLink} to=\"/profile\">Profile</NavLink>\r\n          </li>\r\n          <li className={styles.navItem}>\r\n            <NavLink className={styles.navLink} to=\"/registration\">Registration</NavLink>\r\n          </li>\r\n          <li className={styles.navItem}>\r\n            <NavLink className={styles.navLink} to=\"/login\">Login</NavLink>\r\n          </li>\r\n          <li className={styles.navItem}>\r\n            <NavLink className={styles.navLink} to=\"/new-password\">New Password</NavLink>\r\n          </li>\r\n          <li className={styles.navItem}>\r\n            <NavLink className={styles.navLink} to=\"/forgot-password\">Forgot Password</NavLink>\r\n          </li>\r\n          <li className={styles.navItem}>\r\n            <NavLink className={styles.navLink} to=\"/test-components\">Test</NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport Routes from '../components/Routes/Routes';\nimport { Header } from '../features/Header/Header';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Header />\n        <Routes />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {};\r\ntype AppStateType = typeof initialState;\r\n\r\nexport const appReducer = (state: AppStateType = initialState, action: ActionsType): AppStateType => {\r\n  return state\r\n}\r\n\r\ntype ActionsType = any;","const initialState = {};\r\ntype AuthStateType = typeof initialState;\r\n\r\nexport const authReducer = (state: AuthStateType = initialState, action: ActionsType): AuthStateType => {\r\n  return state\r\n}\r\n\r\ntype ActionsType = any;","const initialState = {};\r\ntype ProfileStateType = typeof initialState;\r\n\r\nexport const profileReducer = (state: ProfileStateType = initialState, action: ActionsType): ProfileStateType => {\r\n  return state\r\n}\r\n\r\ntype ActionsType = any;","const initialState = {};\r\ntype TestStateType = typeof initialState;\r\n\r\nexport const testReducer = (state: TestStateType = initialState, action: ActionsType): TestStateType => {\r\n  return state\r\n}\r\n\r\ntype ActionsType = any;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { appReducer } from \"./reducers/app-reducer\";\r\nimport { authReducer } from \"./reducers/auth-reducer\";\r\nimport { profileReducer } from \"./reducers/profile-reducer\";\r\nimport { testReducer } from \"./reducers/test-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  app: appReducer,\r\n  auth: authReducer,\r\n  profile: profileReducer,\r\n  test: testReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './../src/app/App';\nimport { store } from './app/store';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}